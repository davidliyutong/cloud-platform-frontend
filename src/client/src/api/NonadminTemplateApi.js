/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TemplateGetResponse from '../model/TemplateGetResponse';
import TemplateListResponse from '../model/TemplateListResponse';

/**
* NonadminTemplate service.
* @module api/NonadminTemplateApi
* @version 1.0.0
*/
export default class NonadminTemplateApi {

    /**
    * Constructs a new NonadminTemplateApi. 
    * @alias module:api/NonadminTemplateApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getnonadminTemplateNonadminTemplateGet operation.
     * @callback module:api/NonadminTemplateApi~getnonadminTemplateNonadminTemplateGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TemplateGetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a template by id. The same as admin_template_get, but without role check.
     * @param {String} templateId 
     * @param {module:api/NonadminTemplateApi~getnonadminTemplateNonadminTemplateGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TemplateGetResponse}
     */
    getnonadminTemplateNonadminTemplateGet(templateId, callback) {
      let postBody = null;
      // verify the required parameter 'templateId' is set
      if (templateId === undefined || templateId === null) {
        throw new Error("Missing the required parameter 'templateId' when calling getnonadminTemplateNonadminTemplateGet");
      }

      let pathParams = {
        'template_id': templateId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TemplateGetResponse;
      return this.apiClient.callApi(
        '/v1/templates/{template_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getnonadminTemplateNonadminTemplateList operation.
     * @callback module:api/NonadminTemplateApi~getnonadminTemplateNonadminTemplateListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TemplateListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all templates. The same as admin_template_list, but without role check.
     * @param {Object} opts Optional parameters
     * @param {Number} [indexStart] 
     * @param {Number} [indexEnd] 
     * @param {String} [extraQueryFilter] 
     * @param {module:api/NonadminTemplateApi~getnonadminTemplateNonadminTemplateListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TemplateListResponse}
     */
    getnonadminTemplateNonadminTemplateList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'index_start': opts['indexStart'],
        'index_end': opts['indexEnd'],
        'extra_query_filter': opts['extraQueryFilter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TemplateListResponse;
      return this.apiClient.callApi(
        '/v1/templates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
