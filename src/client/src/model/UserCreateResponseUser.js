/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Email2 from './Email2';
import ExtraInfo from './ExtraInfo';
import Htpasswd from './Htpasswd';
import ResourceStatusEnum from './ResourceStatusEnum';
import UserModel from './UserModel';
import UserModelQuota from './UserModelQuota';
import UserRoleEnum from './UserRoleEnum';
import UserStatusEnum from './UserStatusEnum';
import Uuid from './Uuid';

/**
 * The UserCreateResponseUser model module.
 * @module model/UserCreateResponseUser
 * @version 1.0.0
 */
class UserCreateResponseUser {
    /**
     * Constructs a new <code>UserCreateResponseUser</code>.
     * @alias module:model/UserCreateResponseUser
     * @implements module:model/UserModel
     * @param version {String} 
     * @param uid {Number} 
     * @param uuid {module:model/Uuid} 
     * @param username {String} 
     * @param email {module:model/Email2} 
     * @param password {String} 
     * @param role {module:model/UserRoleEnum} 
     * @param ownedPodIds {Array.<String>} 
     * @param quota {module:model/UserModelQuota} 
     */
    constructor(version, uid, uuid, username, email, password, role, ownedPodIds, quota) { 
        UserModel.initialize(this, version, uid, uuid, username, email, password, role, ownedPodIds, quota);
        UserCreateResponseUser.initialize(this, version, uid, uuid, username, email, password, role, ownedPodIds, quota);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, version, uid, uuid, username, email, password, role, ownedPodIds, quota) { 
        obj['version'] = version;
        obj['uid'] = uid;
        obj['uuid'] = uuid;
        obj['username'] = username;
        obj['email'] = email;
        obj['password'] = password;
        obj['role'] = role;
        obj['owned_pod_ids'] = ownedPodIds;
        obj['quota'] = quota;
    }

    /**
     * Constructs a <code>UserCreateResponseUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserCreateResponseUser} obj Optional instance to populate.
     * @return {module:model/UserCreateResponseUser} The populated <code>UserCreateResponseUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserCreateResponseUser();
            UserModel.constructFromObject(data, obj);

            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('resource_status')) {
                obj['resource_status'] = ApiClient.convertToType(data['resource_status'], ResourceStatusEnum);
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'Number');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = Uuid.constructFromObject(data['uuid']);
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], UserStatusEnum);
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = Email2.constructFromObject(data['email']);
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('htpasswd')) {
                obj['htpasswd'] = Htpasswd.constructFromObject(data['htpasswd']);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = UserRoleEnum.constructFromObject(data['role']);
            }
            if (data.hasOwnProperty('owned_pod_ids')) {
                obj['owned_pod_ids'] = ApiClient.convertToType(data['owned_pod_ids'], ['String']);
            }
            if (data.hasOwnProperty('quota')) {
                obj['quota'] = UserModelQuota.constructFromObject(data['quota']);
            }
            if (data.hasOwnProperty('extra_info')) {
                obj['extra_info'] = ExtraInfo.constructFromObject(data['extra_info']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserCreateResponseUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserCreateResponseUser</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserCreateResponseUser.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // validate the optional field `uuid`
        if (data['uuid']) { // data not null
          Uuid.validateJSON(data['uuid']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // validate the optional field `email`
        if (data['email']) { // data not null
          Email2.validateJSON(data['email']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // validate the optional field `htpasswd`
        if (data['htpasswd']) { // data not null
          Htpasswd.validateJSON(data['htpasswd']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['owned_pod_ids'])) {
            throw new Error("Expected the field `owned_pod_ids` to be an array in the JSON data but got " + data['owned_pod_ids']);
        }
        // validate the optional field `quota`
        if (data['quota']) { // data not null
          UserModelQuota.validateJSON(data['quota']);
        }
        // validate the optional field `extra_info`
        if (data['extra_info']) { // data not null
          ExtraInfo.validateJSON(data['extra_info']);
        }

        return true;
    }


}

UserCreateResponseUser.RequiredProperties = ["version", "uid", "uuid", "username", "email", "password", "role", "owned_pod_ids", "quota"];

/**
 * @member {String} version
 */
UserCreateResponseUser.prototype['version'] = undefined;

/**
 * @member {module:model/ResourceStatusEnum} resource_status
 */
UserCreateResponseUser.prototype['resource_status'] = undefined;

/**
 * @member {Number} uid
 */
UserCreateResponseUser.prototype['uid'] = undefined;

/**
 * @member {module:model/Uuid} uuid
 */
UserCreateResponseUser.prototype['uuid'] = undefined;

/**
 * @member {String} username
 */
UserCreateResponseUser.prototype['username'] = undefined;

/**
 * @member {module:model/UserStatusEnum} status
 */
UserCreateResponseUser.prototype['status'] = undefined;

/**
 * @member {module:model/Email2} email
 */
UserCreateResponseUser.prototype['email'] = undefined;

/**
 * @member {String} password
 */
UserCreateResponseUser.prototype['password'] = undefined;

/**
 * @member {module:model/Htpasswd} htpasswd
 */
UserCreateResponseUser.prototype['htpasswd'] = undefined;

/**
 * @member {module:model/UserRoleEnum} role
 */
UserCreateResponseUser.prototype['role'] = undefined;

/**
 * @member {Array.<String>} owned_pod_ids
 */
UserCreateResponseUser.prototype['owned_pod_ids'] = undefined;

/**
 * @member {module:model/UserModelQuota} quota
 */
UserCreateResponseUser.prototype['quota'] = undefined;

/**
 * @member {module:model/ExtraInfo} extra_info
 */
UserCreateResponseUser.prototype['extra_info'] = undefined;


// Implement UserModel interface:
/**
 * @member {String} version
 */
UserModel.prototype['version'] = undefined;
/**
 * @member {module:model/ResourceStatusEnum} resource_status
 */
UserModel.prototype['resource_status'] = undefined;
/**
 * @member {Number} uid
 */
UserModel.prototype['uid'] = undefined;
/**
 * @member {module:model/Uuid} uuid
 */
UserModel.prototype['uuid'] = undefined;
/**
 * @member {String} username
 */
UserModel.prototype['username'] = undefined;
/**
 * @member {module:model/UserStatusEnum} status
 */
UserModel.prototype['status'] = undefined;
/**
 * @member {module:model/Email2} email
 */
UserModel.prototype['email'] = undefined;
/**
 * @member {String} password
 */
UserModel.prototype['password'] = undefined;
/**
 * @member {module:model/Htpasswd} htpasswd
 */
UserModel.prototype['htpasswd'] = undefined;
/**
 * @member {module:model/UserRoleEnum} role
 */
UserModel.prototype['role'] = undefined;
/**
 * @member {Array.<String>} owned_pod_ids
 */
UserModel.prototype['owned_pod_ids'] = undefined;
/**
 * @member {module:model/UserModelQuota} quota
 */
UserModel.prototype['quota'] = undefined;
/**
 * @member {module:model/ExtraInfo} extra_info
 */
UserModel.prototype['extra_info'] = undefined;




export default UserCreateResponseUser;

