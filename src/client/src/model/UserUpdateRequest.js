/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Email1 from './Email1';
import OldPassword from './OldPassword';
import Password from './Password';
import Quota from './Quota';
import Role from './Role';
import Status from './Status';

/**
 * The UserUpdateRequest model module.
 * @module model/UserUpdateRequest
 * @version 1.0.0
 */
class UserUpdateRequest {
    /**
     * Constructs a new <code>UserUpdateRequest</code>.
     *      Update request for users, all fields except username are optional.     None means no change.     
     * @alias module:model/UserUpdateRequest
     * @param username {String} 
     */
    constructor(username) { 
        
        UserUpdateRequest.initialize(this, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, username) { 
        obj['username'] = username;
    }

    /**
     * Constructs a <code>UserUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserUpdateRequest} obj Optional instance to populate.
     * @return {module:model/UserUpdateRequest} The populated <code>UserUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserUpdateRequest();

            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('old_password')) {
                obj['old_password'] = OldPassword.constructFromObject(data['old_password']);
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = Password.constructFromObject(data['password']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = Email1.constructFromObject(data['email']);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = Role.constructFromObject(data['role']);
            }
            if (data.hasOwnProperty('quota')) {
                obj['quota'] = Quota.constructFromObject(data['quota']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserUpdateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserUpdateRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // validate the optional field `old_password`
        if (data['old_password']) { // data not null
          OldPassword.validateJSON(data['old_password']);
        }
        // validate the optional field `password`
        if (data['password']) { // data not null
          Password.validateJSON(data['password']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          Status.validateJSON(data['status']);
        }
        // validate the optional field `email`
        if (data['email']) { // data not null
          Email1.validateJSON(data['email']);
        }
        // validate the optional field `role`
        if (data['role']) { // data not null
          Role.validateJSON(data['role']);
        }
        // validate the optional field `quota`
        if (data['quota']) { // data not null
          Quota.validateJSON(data['quota']);
        }

        return true;
    }


}

UserUpdateRequest.RequiredProperties = ["username"];

/**
 * @member {String} username
 */
UserUpdateRequest.prototype['username'] = undefined;

/**
 * @member {module:model/OldPassword} old_password
 */
UserUpdateRequest.prototype['old_password'] = undefined;

/**
 * @member {module:model/Password} password
 */
UserUpdateRequest.prototype['password'] = undefined;

/**
 * @member {module:model/Status} status
 */
UserUpdateRequest.prototype['status'] = undefined;

/**
 * @member {module:model/Email1} email
 */
UserUpdateRequest.prototype['email'] = undefined;

/**
 * @member {module:model/Role} role
 */
UserUpdateRequest.prototype['role'] = undefined;

/**
 * @member {module:model/Quota} quota
 */
UserUpdateRequest.prototype['quota'] = undefined;






export default UserUpdateRequest;

