/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Defaults from './Defaults';
import Fields from './Fields';

/**
 * The TemplateCreateRequest model module.
 * @module model/TemplateCreateRequest
 * @version 1.0.0
 */
class TemplateCreateRequest {
    /**
     * Constructs a new <code>TemplateCreateRequest</code>.
     *      Create request for templates.     fields and defaults are optional and not yet used.     
     * @alias module:model/TemplateCreateRequest
     * @param name {String} 
     * @param description {String} 
     * @param imageRef {String} 
     * @param templateStr {String} 
     * @param fields {module:model/Fields} 
     * @param defaults {module:model/Defaults} 
     */
    constructor(name, description, imageRef, templateStr, fields, defaults) { 
        
        TemplateCreateRequest.initialize(this, name, description, imageRef, templateStr, fields, defaults);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, description, imageRef, templateStr, fields, defaults) { 
        obj['name'] = name;
        obj['description'] = description;
        obj['image_ref'] = imageRef;
        obj['template_str'] = templateStr;
        obj['fields'] = fields;
        obj['defaults'] = defaults;
    }

    /**
     * Constructs a <code>TemplateCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemplateCreateRequest} obj Optional instance to populate.
     * @return {module:model/TemplateCreateRequest} The populated <code>TemplateCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TemplateCreateRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('image_ref')) {
                obj['image_ref'] = ApiClient.convertToType(data['image_ref'], 'String');
            }
            if (data.hasOwnProperty('template_str')) {
                obj['template_str'] = ApiClient.convertToType(data['template_str'], 'String');
            }
            if (data.hasOwnProperty('fields')) {
                obj['fields'] = Fields.constructFromObject(data['fields']);
            }
            if (data.hasOwnProperty('defaults')) {
                obj['defaults'] = Defaults.constructFromObject(data['defaults']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TemplateCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemplateCreateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TemplateCreateRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['image_ref'] && !(typeof data['image_ref'] === 'string' || data['image_ref'] instanceof String)) {
            throw new Error("Expected the field `image_ref` to be a primitive type in the JSON string but got " + data['image_ref']);
        }
        // ensure the json data is a string
        if (data['template_str'] && !(typeof data['template_str'] === 'string' || data['template_str'] instanceof String)) {
            throw new Error("Expected the field `template_str` to be a primitive type in the JSON string but got " + data['template_str']);
        }
        // validate the optional field `fields`
        if (data['fields']) { // data not null
          Fields.validateJSON(data['fields']);
        }
        // validate the optional field `defaults`
        if (data['defaults']) { // data not null
          Defaults.validateJSON(data['defaults']);
        }

        return true;
    }


}

TemplateCreateRequest.RequiredProperties = ["name", "description", "image_ref", "template_str", "fields", "defaults"];

/**
 * @member {String} name
 */
TemplateCreateRequest.prototype['name'] = undefined;

/**
 * @member {String} description
 */
TemplateCreateRequest.prototype['description'] = undefined;

/**
 * @member {String} image_ref
 */
TemplateCreateRequest.prototype['image_ref'] = undefined;

/**
 * @member {String} template_str
 */
TemplateCreateRequest.prototype['template_str'] = undefined;

/**
 * @member {module:model/Fields} fields
 */
TemplateCreateRequest.prototype['fields'] = undefined;

/**
 * @member {module:model/Defaults} defaults
 */
TemplateCreateRequest.prototype['defaults'] = undefined;






export default TemplateCreateRequest;

