/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Description from './Description';
import Name from './Name';
import PodId from './PodId';
import PodUpdateRequestTargetStatus from './PodUpdateRequestTargetStatus';
import TimeoutS from './TimeoutS';
import Username from './Username';

/**
 * The PodUpdateRequest model module.
 * @module model/PodUpdateRequest
 * @version 1.0.0
 */
class PodUpdateRequest {
    /**
     * Constructs a new <code>PodUpdateRequest</code>.
     *      Update request for pods, all fields except pod_id are optional.     target_status is the target status for the pod to reach. Can be either running or stopped.     
     * @alias module:model/PodUpdateRequest
     * @param podId {module:model/PodId} 
     */
    constructor(podId) { 
        
        PodUpdateRequest.initialize(this, podId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, podId) { 
        obj['pod_id'] = podId;
    }

    /**
     * Constructs a <code>PodUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodUpdateRequest} obj Optional instance to populate.
     * @return {module:model/PodUpdateRequest} The populated <code>PodUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodUpdateRequest();

            if (data.hasOwnProperty('pod_id')) {
                obj['pod_id'] = PodId.constructFromObject(data['pod_id']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = Name.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = Description.constructFromObject(data['description']);
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = Username.constructFromObject(data['username']);
            }
            if (data.hasOwnProperty('timeout_s')) {
                obj['timeout_s'] = TimeoutS.constructFromObject(data['timeout_s']);
            }
            if (data.hasOwnProperty('target_status')) {
                obj['target_status'] = PodUpdateRequestTargetStatus.constructFromObject(data['target_status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodUpdateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodUpdateRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `pod_id`
        if (data['pod_id']) { // data not null
          PodId.validateJSON(data['pod_id']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          Name.validateJSON(data['name']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          Description.validateJSON(data['description']);
        }
        // validate the optional field `username`
        if (data['username']) { // data not null
          Username.validateJSON(data['username']);
        }
        // validate the optional field `timeout_s`
        if (data['timeout_s']) { // data not null
          TimeoutS.validateJSON(data['timeout_s']);
        }
        // validate the optional field `target_status`
        if (data['target_status']) { // data not null
          PodUpdateRequestTargetStatus.validateJSON(data['target_status']);
        }

        return true;
    }


}

PodUpdateRequest.RequiredProperties = ["pod_id"];

/**
 * @member {module:model/PodId} pod_id
 */
PodUpdateRequest.prototype['pod_id'] = undefined;

/**
 * @member {module:model/Name} name
 */
PodUpdateRequest.prototype['name'] = undefined;

/**
 * @member {module:model/Description} description
 */
PodUpdateRequest.prototype['description'] = undefined;

/**
 * @member {module:model/Username} username
 */
PodUpdateRequest.prototype['username'] = undefined;

/**
 * @member {module:model/TimeoutS} timeout_s
 */
PodUpdateRequest.prototype['timeout_s'] = undefined;

/**
 * @member {module:model/PodUpdateRequestTargetStatus} target_status
 */
PodUpdateRequest.prototype['target_status'] = undefined;






export default PodUpdateRequest;

